{
  "include": ["**/*.ts", "**/*.js", "**/*.vue"],
  "exclude": ["node_modules"],
  "compilerOptions": {
    "target": "esnext",
    "module": "commonjs",
    // "module": "esnext", // this works with nuxt, but node.js is not able to use esnext modules
    "moduleResolution": "node",
    "lib": ["esnext", "esnext.asynciterable", "dom"],
    "allowJs": true,
    // "checkJs": true,
    "sourceMap": true,
    "strict": true,
    "noImplicitAny": false,
    "noEmit": true,
    "isolatedModules":true,
    "baseUrl": ".",
    "strictNullChecks": true,
    // not sure if both of these should be defined:
    "typeRoots": ["types", "node_modules/@types"],
    "types": ["@types/node", "@nuxt/types", "@nuxtjs/vuetify"],
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    /* Additional Checks */
    // for now lets keep this out:
    // "noUnusedLocals": true /* Report errors on unused locals. */,
    // "noUnusedParameters": true /* Report errors on unused parameters. */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    /* Experimental Options */
    "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
    // "outDir": "dist",
    /* Module Resolution Options */
    // not sure if this breaks things...
    "paths": {
      "*": ["node_modules/*"],
      "~/*": ["./*"],
      "@/*": ["./types/*"]
    } /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
  }
}
